# pylint: disable=E0401, E0611

import asyncio
import datetime
import os
from fastapi import FastAPI
from pydantic import BaseModel, validator

app = FastAPI()

# Привет! Время уже поджимает, поэтому дам общие рекомендации. У вас вроде как много всего, но нет реализации FastAPI.
# Ее нужно добавить. Ваш сервис должен реализовывать основные запросы:
#
# / - корневой роут должен отдавать, например, идентификатор текущей актуальной модели или какую-то информационную справку. Либо можно просто статус 200 и ОК.
# /predict - делает предсказание либо по тем данным, что переданы в POST-запросе, либо по каким-то заранее загруженным
# /evaluate - отдает метрики модели
# В идеале каждая модель должна быть сохранена в onnx-формате. В onnx-файле можно хранить мета-данные, например, идентификатор
# модели, дату последнего обновления, метрики качества и т д. Также можно в роуты добавить метод переключения между моделями.


@app.post("/")
def root():
    return 'Ok'


@app.post("/predict")
def predict():
    return [4, 5, 6]


@app.post("/evaluate")
def predict():
    return {'train_rmse': 30, 'val_rmse': 20}
